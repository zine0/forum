
CREATE TABLE user
(
    id         INT AUTO_INCREMENT
        PRIMARY KEY,
    username   VARCHAR(100)  NULL,
    password   VARCHAR(100)  NULL,
    avatar     VARCHAR(200)  NULL,
    email      VARCHAR(100)  NULL,
    permission INT DEFAULT 0 NULL
);


CREATE TABLE post
(
    id          INT AUTO_INCREMENT
        PRIMARY KEY,
    title       VARCHAR(200)  NULL,
    content     LONGTEXT      NULL,
    create_time DATETIME      NULL,
    update_time DATETIME      NULL,
    author_id   INT           NULL,
    preview     VARCHAR(500)  NULL,
    likes       INT DEFAULT 0 NULL,
    comments    INT DEFAULT 0 NULL,
    CONSTRAINT fk_post_user
        FOREIGN KEY (author_id) REFERENCES user (id)
);


CREATE TABLE article_likes
(
    id          INT AUTO_INCREMENT
        PRIMARY KEY,
    user_id     INT      NULL,
    post_id     INT      NULL,
    create_time DATETIME NULL,
    CONSTRAINT user_article_unique
        UNIQUE (user_id, post_id),
    CONSTRAINT fk_article_likes_post
        FOREIGN KEY (post_id) REFERENCES post (id),
    CONSTRAINT fk_article_likes_user
        FOREIGN KEY (user_id) REFERENCES user (id)
);


CREATE TABLE comment
(
    id          INT AUTO_INCREMENT
        PRIMARY KEY,
    author_id   INT      NULL,
    post_id     INT      NULL,
    content     LONGTEXT NULL,
    create_time DATETIME NULL,
    CONSTRAINT fk_comment_post
        FOREIGN KEY (post_id) REFERENCES post (id)
            ON DELETE CASCADE,
    CONSTRAINT fk_comment_user
        FOREIGN KEY (author_id) REFERENCES user (id)
);

CREATE TABLE featured_post
(
    id      INT AUTO_INCREMENT
        PRIMARY KEY,
    post_id INT NULL,
    CONSTRAINT fk_featured_post_post
        FOREIGN KEY (post_id) REFERENCES post (id)
            ON DELETE CASCADE
);